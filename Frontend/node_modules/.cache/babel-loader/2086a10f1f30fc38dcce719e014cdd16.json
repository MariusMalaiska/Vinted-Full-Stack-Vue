{"remainingRequest":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/babel-loader/lib/index.js!/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/src/store/modules/auth/index.js","dependencies":[{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/src/store/modules/auth/index.js","mtime":1595941686873},{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogZXNsaW50LWRpc2FibGUgcHJvbWlzZS9wYXJhbS1uYW1lcyAqLwovLyBpbXBvcnQgewovLyAgIEFVVEhfUkVRVUVTVCwKLy8gICBBVVRIX0VSUk9SLAovLyAgIEFVVEhfU1VDQ0VTUywKLy8gICBBVVRIX0xPR09VVAovLyB9IGZyb20gIi4uL2FjdGlvbnMvYXV0aCI7Ci8vIGltcG9ydCB7IFVTRVJfUkVRVUVTVCB9IGZyb20gIi4uL2FjdGlvbnMvdXNlciI7Ci8vIGltcG9ydCBhcGlDYWxsIGZyb20gInV0aWxzL2FwaSI7Ci8vIGNvbnN0IHN0YXRlID0gewovLyAgIHRva2VuOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlci10b2tlbiIpIHx8ICIiLAovLyAgIHN0YXR1czogIiIsCi8vICAgaGFzTG9hZGVkT25jZTogZmFsc2UKLy8gfTsKLy8gY29uc3QgZ2V0dGVycyA9IHsKLy8gICBpc0F1dGhlbnRpY2F0ZWQ6IHN0YXRlID0+ICEhc3RhdGUudG9rZW4sCi8vICAgYXV0aFN0YXR1czogc3RhdGUgPT4gc3RhdGUuc3RhdHVzCi8vIH07Ci8vIGNvbnN0IGFjdGlvbnMgPSB7Ci8vICAgW0FVVEhfUkVRVUVTVF06ICh7IGNvbW1pdCwgZGlzcGF0Y2ggfSwgdXNlcikgPT4gewovLyAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKLy8gICAgICAgY29tbWl0KEFVVEhfUkVRVUVTVCk7Ci8vICAgICAgIGFwaUNhbGwoeyB1cmw6ICJhdXRoIiwgZGF0YTogdXNlciwgbWV0aG9kOiAiUE9TVCIgfSkKLy8gICAgICAgICAudGhlbihyZXNwID0+IHsKLy8gICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyLXRva2VuIiwgcmVzcC50b2tlbik7Ci8vICAgICAgICAgICAvLyBIZXJlIHNldCB0aGUgaGVhZGVyIG9mIHlvdXIgYWpheCBsaWJyYXJ5IHRvIHRoZSB0b2tlbiB2YWx1ZS4KLy8gICAgICAgICAgIC8vIGV4YW1wbGUgd2l0aCBheGlvcwovLyAgICAgICAgICAgLy8gYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ0F1dGhvcml6YXRpb24nXSA9IHJlc3AudG9rZW4KLy8gICAgICAgICAgIGNvbW1pdChBVVRIX1NVQ0NFU1MsIHJlc3ApOwovLyAgICAgICAgICAgZGlzcGF0Y2goVVNFUl9SRVFVRVNUKTsKLy8gICAgICAgICAgIHJlc29sdmUocmVzcCk7Ci8vICAgICAgICAgfSkKLy8gICAgICAgICAuY2F0Y2goZXJyID0+IHsKLy8gICAgICAgICAgIGNvbW1pdChBVVRIX0VSUk9SLCBlcnIpOwovLyAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oInVzZXItdG9rZW4iKTsKLy8gICAgICAgICAgIHJlamVjdChlcnIpOwovLyAgICAgICAgIH0pOwovLyAgICAgfSk7Ci8vICAgfSwKLy8gICBbQVVUSF9MT0dPVVRdOiAoeyBjb21taXQgfSkgPT4gewovLyAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewovLyAgICAgICBjb21taXQoQVVUSF9MT0dPVVQpOwovLyAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgidXNlci10b2tlbiIpOwovLyAgICAgICByZXNvbHZlKCk7Ci8vICAgICB9KTsKLy8gICB9Ci8vIH07Ci8vIGNvbnN0IG11dGF0aW9ucyA9IHsKLy8gICBbQVVUSF9SRVFVRVNUXTogc3RhdGUgPT4gewovLyAgICAgc3RhdGUuc3RhdHVzID0gImxvYWRpbmciOwovLyAgIH0sCi8vICAgW0FVVEhfU1VDQ0VTU106IChzdGF0ZSwgcmVzcCkgPT4gewovLyAgICAgc3RhdGUuc3RhdHVzID0gInN1Y2Nlc3MiOwovLyAgICAgc3RhdGUudG9rZW4gPSByZXNwLnRva2VuOwovLyAgICAgc3RhdGUuaGFzTG9hZGVkT25jZSA9IHRydWU7Ci8vICAgfSwKLy8gICBbQVVUSF9FUlJPUl06IHN0YXRlID0+IHsKLy8gICAgIHN0YXRlLnN0YXR1cyA9ICJlcnJvciI7Ci8vICAgICBzdGF0ZS5oYXNMb2FkZWRPbmNlID0gdHJ1ZTsKLy8gICB9LAovLyAgIFtBVVRIX0xPR09VVF06IHN0YXRlID0+IHsKLy8gICAgIHN0YXRlLnRva2VuID0gIiI7Ci8vICAgfQovLyB9OwovLyBleHBvcnQgZGVmYXVsdCB7Ci8vICAgc3RhdGUsCi8vICAgZ2V0dGVycywKLy8gICBhY3Rpb25zLAovLyAgIG11dGF0aW9ucwovLyB9Ow=="},{"version":3,"sources":["/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/src/store/modules/auth/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* eslint-disable promise/param-names */\n// import {\n//   AUTH_REQUEST,\n//   AUTH_ERROR,\n//   AUTH_SUCCESS,\n//   AUTH_LOGOUT\n// } from \"../actions/auth\";\n// import { USER_REQUEST } from \"../actions/user\";\n// import apiCall from \"utils/api\";\n\n// const state = {\n//   token: localStorage.getItem(\"user-token\") || \"\",\n//   status: \"\",\n//   hasLoadedOnce: false\n// };\n\n// const getters = {\n//   isAuthenticated: state => !!state.token,\n//   authStatus: state => state.status\n// };\n\n// const actions = {\n//   [AUTH_REQUEST]: ({ commit, dispatch }, user) => {\n//     return new Promise((resolve, reject) => {\n//       commit(AUTH_REQUEST);\n//       apiCall({ url: \"auth\", data: user, method: \"POST\" })\n//         .then(resp => {\n//           localStorage.setItem(\"user-token\", resp.token);\n//           // Here set the header of your ajax library to the token value.\n//           // example with axios\n//           // axios.defaults.headers.common['Authorization'] = resp.token\n//           commit(AUTH_SUCCESS, resp);\n//           dispatch(USER_REQUEST);\n//           resolve(resp);\n//         })\n//         .catch(err => {\n//           commit(AUTH_ERROR, err);\n//           localStorage.removeItem(\"user-token\");\n//           reject(err);\n//         });\n//     });\n//   },\n//   [AUTH_LOGOUT]: ({ commit }) => {\n//     return new Promise(resolve => {\n//       commit(AUTH_LOGOUT);\n//       localStorage.removeItem(\"user-token\");\n//       resolve();\n//     });\n//   }\n// };\n\n// const mutations = {\n//   [AUTH_REQUEST]: state => {\n//     state.status = \"loading\";\n//   },\n//   [AUTH_SUCCESS]: (state, resp) => {\n//     state.status = \"success\";\n//     state.token = resp.token;\n//     state.hasLoadedOnce = true;\n//   },\n//   [AUTH_ERROR]: state => {\n//     state.status = \"error\";\n//     state.hasLoadedOnce = true;\n//   },\n//   [AUTH_LOGOUT]: state => {\n//     state.token = \"\";\n//   }\n// };\n\n// export default {\n//   state,\n//   getters,\n//   actions,\n//   mutations\n// };\n"]}]}