{"remainingRequest":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/babel-loader/lib/index.js!/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/src/api/index.js","dependencies":[{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/src/api/index.js","mtime":1595937851945},{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/mariusmalaiska/Code Academy/Antras Kursas Vue js/Vinted full stack/Frontend/src/api/index.js"],"names":["axios","API_URL","api","createApiInstance","login","body","success","failure","console","log","post","response","data","errorsMessages","errors","errorName","register","getUser","get","fetchItems","localStorage","token","create","headers","Authorization"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst API_URL = \"http://localhost:3003/v1/\";\nconst api = () => createApiInstance();\n\nexport default {\n  login: async (body, success, failure) => {\n    try {\n      console.log(\"tuoj vykdysiu requesta\");\n      console.log(body, \"body\");\n      const response = await api().post(API_URL + \"user/login\", body);\n      console.log(\"paejo\");\n\n      success(response.data);\n    } catch (context) {\n      let errorsMessages = [];\n      const { errors } = context.response.data;\n      for (const errorName in errors) {\n        errorsMessages = [...errorsMessages, ...errors[errorName]];\n      }\n      failure(errorsMessages);\n    }\n  },\n  register: async (body, success, failure) => {\n    try {\n      const response = await api().post(API_URL + \"user/register\", body);\n      console.log(\"paejo\");\n      success(response.data);\n    } catch (context) {\n      let errorsMessages = [];\n      const { errors } = context.response.data;\n      for (const errorName in errors) {\n        errorsMessages = [...errorsMessages, ...errors[errorName]];\n      }\n      failure(errorsMessages);\n    }\n  },\n  getUser: async (success, failure) => {\n    try {\n      const response = await api().get(API_URL + \"auth/user\");\n      success(response.data);\n    } catch (context) {\n      let errorsMessages = [];\n      const { errors } = context.response.data;\n      for (const errorName in errors) {\n        errorsMessages = [...errorsMessages, ...errors[errorName]];\n      }\n      failure(errorsMessages);\n    }\n  },\n  fetchItems: async (success, failure) => {\n    try {\n      const response = await api().get(API_URL + \"products\");\n      success(response.data);\n    } catch (context) {\n      let errorsMessages = [];\n      const { errors } = context.response.data;\n      for (const errorName in errors) {\n        errorsMessages = [...errorsMessages, ...errors[errorName]];\n      }\n      failure(errorsMessages);\n    }\n  }\n};\nfunction createApiInstance() {\n  if (localStorage.token) {\n    // Automatiškai grąžinamas autorizuotas axios instance,\n    return axios.create({\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.token\n      }\n    });\n  } else {\n    // Automatiškai grąžinamas NEautorizuotas axios instance,\n    return axios.create({\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n}\n"]}]}